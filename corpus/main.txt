================================
Tagged literal
================================

(def instant #inst "2018-03-28T10:48:00.000")

---

(document
  (list (symbol)
        (symbol)
        (tagged
          (string (string_content)))))

================================
Comment
================================

[
  #foo.bar/baz "homer"
  :99
 ; a comment
  ]

---

(document
  (vector
    (tagged (string (string_content)))
    (keyword)
    (comment)))

================================
Top-level keyword
================================

:name.spaced/tag

---

(document (keyword))

===================
Sets
===================

#{ #() '(999) }

---

(document (set (function) (special (list (number)))))

===================
Lists
===================

^:private (999 "foo" ::foo/tag sym foo/*sym \c \space \u0FFF)

---

(document (metadata
  (keyword)
  (list (number)
        (string (string_content))
        (keyword)
        (symbol)
        (symbol)
        (character)
        (character)
        (character))))

===================
Vectors
===================

[
  345, ; comment here
  10.1
  -10.1
  010
  -10
  2r101010
  36rHazelnut
  1/3
  nil,
  true
  false
  :*hello* ; comment
  ::+
  :my.sorry/ass
  {:name.spaced/stuff "good", "foo" :bar}
]

---

(document (vector
  (number) (comment)
  (number)
  (number)
  (number)
  (number)
  (number)
  (number)
  (number)
  (nil)
  (true)
  (false)
  (keyword) (comment)
  (keyword)
  (keyword)
  (map (pair (keyword) (string (string_content)))
       (pair (string (string_content)) (keyword)))))

=====================
String content
=====================

[
  ""
  "abc"
  "def\n"
  "\ns\ts"
]

----

(document
  (vector
    (string)
    (string (string_content))
    (string (string_content (escape_sequence)))
    (string (string_content (escape_sequence) (escape_sequence)))))

================================
Top-level numbers
================================

-1

---

(document (number))

================================
Top-level nil
================================

nil

---

(document (nil))

================================
Macros
================================

(defmacro amacro [body] `(do ~@body))

---

(document (list
   (symbol)
   (symbol)
   (vector (symbol))
   (special (list (symbol)
                  (special (symbol))))))

================================
String with newline
================================

"a line
with a newline"

---

(document (string (string_content)))

================================
Namespaced map
================================

#:person {:age 99}

---

(document (nsmap (pair (keyword) (number))))

================================
Regular expression
================================

#"\"\s*\d+\""

---

(document
  (regex
    (regex_escape_sequence)
    (regex_escape_sequence)
    (regex_escape_sequence)
    (regex_escape_sequence)))
